//
//  SeeMovieDetailsViewController.swift
//  Movs
//
//  Created by Lucas Ferraço on 19/09/18.
//  Copyright (c) 2018 Lucas Ferraço. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SeeMovieDetailsDisplayLogic: class {
	func displayMovieDetails(with viewModel: SeeMovieDetails.GetMovieDetails.ViewModel)
}

class SeeMovieDetailsViewController: UIViewController, SeeMovieDetailsDisplayLogic {
	var interactor: SeeMovieDetailsBusinessLogic?
	var router: (NSObjectProtocol & SeeMovieDetailsRoutingLogic & SeeMovieDetailsDataPassing)?
	
	// MARK: Outlets
	
	@IBOutlet weak var backgroundImageView: UIImageView!
	@IBOutlet weak var titleLabel: UILabel!
	@IBOutlet weak var releaseDateLabel: UILabel!
	@IBOutlet weak var genresLabel: UILabel!
	@IBOutlet weak var overviewLabel: UILabel!
	
	fileprivate var favoriteBarButton: UIBarButtonItem!
	fileprivate var isFavoriteMovie: Bool = false
	
	// MARK: Object lifecycle
	
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}
	
	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		setup()
	}
	
	// MARK: Setup
	
	private func setup() {
		let viewController = self
		let interactor = SeeMovieDetailsInteractor()
		let presenter = SeeMovieDetailsPresenter()
		let router = SeeMovieDetailsRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}
	
	// MARK: Routing
	
	override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
		if let scene = segue.identifier {
			let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
			if let router = router, router.responds(to: selector) {
				router.perform(selector, with: segue)
			}
		}
	}
	
	// MARK: View lifecycle
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		navigationController?.navigationBar.prefersLargeTitles = false
		tabBarController?.tabBar.isHidden = true
		setupFavoriteButton()
		
		interactor?.getMovieDetails()
	}
	
	override func viewWillDisappear(_ animated: Bool) {
		super.viewWillDisappear(animated)
		router?.routeToListMovies()
	}
	
	// MARK: Display Movie Details
	
	func displayMovieDetails(with viewModel: SeeMovieDetails.GetMovieDetails.ViewModel) {
		backgroundImageView.image = viewModel.image
		titleLabel.text = viewModel.title
		releaseDateLabel.text = viewModel.release
		genresLabel.text = viewModel.genres
		overviewLabel.text = viewModel.overview
		
		isFavoriteMovie = viewModel.isFavorite
		setFavoriteButton(to: viewModel.isFavorite)
	}
	
	// MARK: Auxiliary methods
	
	fileprivate func setupFavoriteButton() {
		favoriteBarButton = UIBarButtonItem(image: #imageLiteral(resourceName: "favorite_empty_icon.png"), style: .plain, target: self, action: #selector(self.setFavorite))
		navigationItem.setRightBarButton(favoriteBarButton, animated: false)
	}
	
	@objc fileprivate func setFavorite() {
		isFavoriteMovie = !isFavoriteMovie
		setFavoriteButton(to: isFavoriteMovie)
		interactor?.toggleFavorite()
	}
	
	fileprivate func setFavoriteButton(to selected: Bool) {
		if selected {
			favoriteBarButton.tintColor = .red
			favoriteBarButton.image = #imageLiteral(resourceName: "favorite_full_icon.png")
		} else {
			favoriteBarButton.tintColor = navigationController?.navigationBar.tintColor
			favoriteBarButton.image = #imageLiteral(resourceName: "favorite_empty_icon.png")
		}
	}
}
