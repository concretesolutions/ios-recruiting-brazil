//
//  FavoritesRouter.swift
//  concreto-filmes
//
//  Created by Leonel Menezes on 31/10/18.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RealmSwift

@objc protocol FavoritesRoutingLogic {
    func routeToMovieDetail(shouldFilter: Bool, index: Int)
}

protocol FavoritesDataPassing {
    var dataStore: FavoritesDataStore? { get }
}

class FavoritesRouter: NSObject, FavoritesRoutingLogic, FavoritesDataPassing {
    weak var viewController: FavoritesViewController?
    var dataStore: FavoritesDataStore?
    let realm = RealmService.shared.realm
    // MARK: Routing
    
    func routeToMovieDetail(shouldFilter: Bool, index: Int) {
        guard let sourceVC = viewController else { return }
        if let movie = dataStore?.movies[index] {
            let isFavorite = self.realm?.object(ofType: FavoriteMovie.self, forPrimaryKey: movie.id) != nil
            let movieViewModel = MovieDetail.ViewModel(movieImageURL: movie.imageUrl, title: movie.title, genres: movie.genres, overview: movie.overview, releaseDate: movie.releaseDate, isFavorite: isFavorite)
            let destinationVC = MovieDetailViewController(viewModel: movieViewModel)
            navigateToMovieDetail(source: sourceVC, destination: destinationVC)
        }
    }
    
    func navigateToMovieDetail(source: FavoritesViewController, destination: MovieDetailViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
}
