//
//  FavoritesInteractor.swift
//  concreto-filmes
//
//  Created by Leonel Menezes on 31/10/18.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RealmSwift

protocol FavoritesBusinessLogic {
    func presentMovies()
}

protocol FavoritesDataStore {
    var movies: [Movie] { get set }
}

class FavoritesInteractor: FavoritesBusinessLogic, FavoritesDataStore {
    var presenter: FavoritesPresentationLogic?
    var worker: FavoritesWorker?
    var realm = RealmService.shared.realm
    var movies: [Movie] = []
    
    func presentMovies() {
        if let realmMovies: Results<MovieRealm> = realm?.objects(MovieRealm.self) {
            self.movies = Array(realmMovies).map({ (movieRealm) -> Movie in
                return Movie(movie: movieRealm)
            })
            presenter?.present(movies: self.movies)
        }
    }
    
}
