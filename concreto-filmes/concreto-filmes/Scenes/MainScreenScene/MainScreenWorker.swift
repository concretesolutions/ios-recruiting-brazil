//
//  MainScreenWorker.swift
//  concreto-filmes
//
//  Created by Leonel Menezes on 23/10/18.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class MainScreenWorker {

    let movieNetworkManager = MovieNetworkManager()
    let searchNetWorkManager = SearchNetworkManager()
    let genreNetworkmanager = MovieGenresNetworkManager()

    func fetchPopularMovies(request: MainScreen.FetchPopularMovies.Request, completion: @escaping (_ movies: [Movie]?, _ error: String?) -> Void) {

        movieNetworkManager.getPopularMovies(page: request.index) { (movies, error) in
            if let error = error {
                completion(nil, error)
            }
            if let movies = movies {
                completion(movies, nil)
            }
        }
    }

    func fetchMoviesByQuery(request: MainScreen.FetchQueryMovies.Request, completion: @escaping (_ movies: [Movie]?, _ error: String?) -> Void) {
        let text = request.text.replacingOccurrences(of: " ", with: "+").lowercased()
        searchNetWorkManager.getMoviesBy(query: text, page: request.index) { (movies, errorMessage) in
            if let error = errorMessage {
                completion(nil, error)
            }
            if let movies = movies {
                completion(movies, nil)
            }
        }
    }

    func fetchAllMovieGenres(completion: @escaping (_ result: Result<String>) -> Void) {
        genreNetworkmanager.getGenres { (genres, error) in
            if let error = error {
                completion(.failure(error))
            }

            if let genres = genres {
                let genreDictionary = genres.reduce([Int: String]()) { (dict, genre) -> [Int: String] in
                    var dict = dict
                    dict[genre.id] = genre.name
                    return dict
                    }
                Genre.fetchedGenres = genreDictionary
                completion(.success)
            }
        }
    }
}
