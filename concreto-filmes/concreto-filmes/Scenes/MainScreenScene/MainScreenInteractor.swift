//
//  MainScreenInteractor.swift
//  concreto-filmes
//
//  Created by Leonel Menezes on 23/10/18.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainScreenBusinessLogic
{
    func doSomething(request: MainScreen.Something.Request)
    func fetchPopularMovies(request: MainScreen.FetchPopularMuvies.Request, completionBlock: (() -> ())?)
}

protocol MainScreenDataStore
{
    var movieTitle: String { get set }
    var movies: [Movie] {get set}
}

class MainScreenInteractor: MainScreenBusinessLogic, MainScreenDataStore
{
    var presenter: MainScreenPresentationLogic?
    var worker: MainScreenWorker?
    var movieTitle: String = ""
    var movies: [Movie] = []
    
    // MARK: Do something
    
    func doSomething(request: MainScreen.Something.Request)
    {
        worker = MainScreenWorker()
        worker?.doSomeWork()
        
        let response = MainScreen.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func fetchPopularMovies(request: MainScreen.FetchPopularMuvies.Request, completionBlock: (() -> ())?) {
        worker = MainScreenWorker()
        worker?.fetchPopularMovies(request: request, completion: { (movies, error) in
            if(error != nil){
                print(error)
            }
            if(movies != nil){
                self.presenter?.present(movies: movies!)
                guard let completion = completionBlock else {return}
                completion()
            }
        })
    }
}

