//
//  MainScreenRouter.swift
//  concreto-filmes
//
//  Created by Leonel Menezes on 23/10/18.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol MainScreenRoutingLogic {
    func routeToMovieDetail(shouldFilter: Bool, index: Int)
}

protocol MainScreenDataPassing {
    var dataStore: MainScreenDataStore? { get }
}

class MainScreenRouter: NSObject, MainScreenRoutingLogic, MainScreenDataPassing {
    weak var viewController: MainScreenViewController?
    var dataStore: MainScreenDataStore?
    let realm = RealmService.shared.realm
    
    // MARK: Routing
    
//    func routeToMovieDetail(shouldFilter: Bool, index: Int) {
//        guard let sourceVC = viewController else { return }
//        if let dataStore = self.dataStore {
//            let movie = shouldFilter ? dataStore.filteredMovies[index] : dataStore.movies[index]
//            let isFavorite = self.realm?.object(ofType: MovieRealm.self, forPrimaryKey: movie.id) != nil
//            let destinationVC = MovieDetailViewController(viewModel: MovieDetail.ViewModel(movieImageURL: movie.posterPath, title: movie.title, genres: movie.genresString(), overview: movie.overview, releaseDate: movie.yearString(), isFavorite: isFavorite))
//            guard var destinationDS = destinationVC.router?.dataStore else { return }
//            passDataToDetailVC(source: dataStore, destination: &destinationDS, index: index)
//            navigateToMovieDetail(source: sourceVC, destination: destinationVC)
//        }
//    }
//
//    func passDataToDetailVC(source: MainScreenDataStore, destination: inout MovieDetailDataStore, index: Int) {
//        destination.movie = source.movies[index]
//    }
//
//    func navigateToMovieDetail(source: MainScreenViewController, destination: MovieDetailViewController) {
//        source.navigationController?.pushViewController(destination, animated: true)
//    }
    
    func routeToMovieDetail(shouldFilter: Bool, index: Int) {
        guard let sourceVC = viewController else { return }
        if let dataStore = self.dataStore {
            let movie = shouldFilter ? dataStore.filteredMovies[index] : dataStore.movies[index]
            let isFavorite = self.realm?.object(ofType: MovieRealm.self, forPrimaryKey: movie.id) != nil
            let destinationVC = MovieDetailViewController(viewModel: MovieDetail.ViewModel(movieImageURL: movie.posterPath, title: movie.title, genres: movie.genresString(), overview: movie.overview, releaseDate: movie.yearString(), isFavorite: isFavorite))
            guard var destinationDS = destinationVC.router?.dataStore else { return }
            passDataToDetailVC(source: dataStore, destination: &destinationDS, index: index, shouldFilter: shouldFilter)
            navigateToMovieDetail(source: sourceVC, destination: destinationVC)
        }
    }
    
    func passDataToDetailVC(source: MainScreenDataStore, destination: inout MovieDetailDataStore, index: Int, shouldFilter: Bool) {
        destination.movie = shouldFilter ? source.filteredMovies[index] : source.movies[index]
    }
    
    func navigateToMovieDetail(source: MainScreenViewController, destination: MovieDetailViewController) {
        source.navigationController?.pushViewController(destination, animated: true)
    }
}
