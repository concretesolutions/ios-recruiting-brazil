//
//  FilterRouter.swift
//  concreto-filmes
//
//  Created by Leonel Menezes on 01/11/18.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol FilterRoutingLogic {
    //func routeToSomewhere(segue: UIStoryboardSegue?)
    func routeBackWithFilters()
}

protocol FilterDataPassing {
    var dataStore: FilterDataStore? { get }
}

class FilterRouter: NSObject, FilterRoutingLogic, FilterDataPassing {
    weak var viewController: FilterViewController?
    var dataStore: FilterDataStore?
    
    func routeBackWithFilters() {
        guard let sourceVC = self.viewController else { return }
        guard let dataStore = self.dataStore else { return }
        guard let destinationTabController = sourceVC.presentingViewController as? TabController else { return }
        guard let destinationNavController = destinationTabController.viewControllers?[1] as? UINavigationController else { return }
        guard let destinationVC = destinationNavController.viewControllers[0] as? FavoritesViewController else { return }
        guard var destinationDS = destinationVC.router?.dataStore else { return }
        
        passData(from: dataStore, to: &destinationDS)
        
        if dataStore.selectedGenre == "" && dataStore.selectedYear == "" {
            destinationVC.isFiltering = false
        } else {
            destinationVC.isFiltering = true
        }
        
        navigateToPresentingVC()
    }
    
    func passData(from sourceDS: FilterDataStore, to destinationDS: inout  FavoritesDataStore) {
        destinationDS.genreFilter = sourceDS.selectedGenre
        destinationDS.yearFilter = sourceDS.selectedYear
    }
    
    func navigateToPresentingVC() {
        self.viewController?.dismiss(animated: true, completion: nil)
    }

}
